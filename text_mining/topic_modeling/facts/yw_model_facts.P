
% FACT: program(program_id, program_name, qualified_program_name, begin_annotation_id, end_annotation_id).
program(1, 'topic_modeling', 'topic_modeling', 1, 78).
program(2, 'AccessText', 'topic_modeling.AccessText', 8, 16).
program(3, 'PreprocessFile', 'topic_modeling.PreprocessFile', 17, 26).
program(4, 'LDA', 'topic_modeling.LDA', 27, 77).
program(5, 'tf_calculation', 'topic_modeling.LDA.tf_calculation', 38, 46).
program(6, 'LatentDirichletAllocation', 'topic_modeling.LDA.LatentDirichletAllocation', 47, 66).
program(7, 'print_top_words', 'topic_modeling.LDA.print_top_words', 67, 76).

% FACT: workflow(program_id).
workflow(1).
workflow(4).

% FACT: function(program_id).

% FACT: has_subprogram(program_id, subprogram_id).
has_subprogram(1, 2).
has_subprogram(1, 3).
has_subprogram(1, 4).
has_subprogram(4, 5).
has_subprogram(4, 6).
has_subprogram(4, 7).

% FACT: port(port_id, port_type, port_name, qualified_port_name, port_annotation_id, data_id).
port(1, 'in', 'Static_text', 'topic_modeling<-Static_text', 3, 1).
port(2, 'out', 'Topicmodeling_Result', 'topic_modeling->Topicmodeling_Result', 5, 2).
port(3, 'in', 'text_data_path', 'topic_modeling.AccessText<-text_data_path', 10, 3).
port(4, 'out', 'text_file', 'topic_modeling.AccessText->text_file', 14, 4).
port(5, 'in', 'stopwords', 'topic_modeling.PreprocessFile<-stopwords', 19, 5).
port(6, 'in', 'regexr', 'topic_modeling.PreprocessFile<-regexr', 20, 6).
port(7, 'in', 'TextRead', 'topic_modeling.PreprocessFile<-TextRead', 22, 4).
port(8, 'out', 'Valid_file', 'topic_modeling.PreprocessFile->Valid_file', 23, 7).
port(9, 'in', 'FileProcess', 'topic_modeling.LDA<-FileProcess', 28, 7).
port(10, 'param', 'n_components', 'topic_modeling.LDA<-n_components', 30, 8).
port(11, 'param', 'n_top_words', 'topic_modeling.LDA<-n_top_words', 31, 9).
port(12, 'in', 'random_state', 'topic_modeling.LDA<-random_state', 32, 10).
port(13, 'in', 'max_iter', 'topic_modeling.LDA<-max_iter', 33, 11).
port(14, 'in', 'learning_method', 'topic_modeling.LDA<-learning_method', 34, 12).
port(15, 'in', 'learning_offset', 'topic_modeling.LDA<-learning_offset', 35, 13).
port(16, 'out', 'Topicmodeling_Result', 'topic_modeling.LDA->Topicmodeling_Result', 36, 14).
port(17, 'in', 'file_valid', 'topic_modeling.LDA.tf_calculation<-file_valid', 40, 15).
port(18, 'out', 'tf', 'topic_modeling.LDA.tf_calculation->tf', 42, 16).
port(19, 'out', 'tf_vectorizer', 'topic_modeling.LDA.tf_calculation->tf_vectorizer', 44, 17).
port(20, 'param', 'n_components', 'topic_modeling.LDA.LatentDirichletAllocation<-n_components', 49, 18).
port(21, 'param', 'tf', 'topic_modeling.LDA.LatentDirichletAllocation<-tf', 50, 16).
port(22, 'param', 'tf_vectorizer', 'topic_modeling.LDA.LatentDirichletAllocation<-tf_vectorizer', 52, 17).
port(23, 'in', 'max_iter', 'topic_modeling.LDA.LatentDirichletAllocation<-max_iter', 54, 19).
port(24, 'in', 'learning_method', 'topic_modeling.LDA.LatentDirichletAllocation<-learning_method', 56, 20).
port(25, 'in', 'learning_offset', 'topic_modeling.LDA.LatentDirichletAllocation<-learning_offset', 58, 21).
port(26, 'in', 'random_state', 'topic_modeling.LDA.LatentDirichletAllocation<-random_state', 60, 22).
port(27, 'out', 'lda', 'topic_modeling.LDA.LatentDirichletAllocation->lda', 62, 23).
port(28, 'out', 'tf_feature_names', 'topic_modeling.LDA.LatentDirichletAllocation->tf_feature_names', 64, 24).
port(29, 'in', 'lda', 'topic_modeling.LDA.print_top_words<-lda', 69, 23).
port(30, 'in', 'tf_feature_names', 'topic_modeling.LDA.print_top_words<-tf_feature_names', 72, 24).
port(31, 'param', 'n_top_words', 'topic_modeling.LDA.print_top_words<-n_top_words', 74, 25).
port(32, 'out', 'Topicmodeling_Result', 'topic_modeling.LDA.print_top_words->Topicmodeling_Result', 75, 26).

% FACT: port_alias(port_id, alias).
port_alias(3, 'Static_text').
port_alias(4, 'TextRead').
port_alias(6, 'regular_expression').
port_alias(8, 'FileProcess').
port_alias(18, 'term_frequency').
port_alias(19, 'term_frequency_vectorizer').
port_alias(21, 'term_frequency').
port_alias(22, 'term_frequency_vectorizer').
port_alias(27, 'LDA_model').
port_alias(28, 'TermFrequency_feature_names').
port_alias(29, 'LDA_model').
port_alias(30, 'TermFrequency_feature_names').

% FACT: port_uri_template(port_id, uri).
port_uri_template(1, 'file:book1.txt').
port_uri_template(2, 'file:output.txt').
port_uri_template(3, 'file:book1.txt').
port_uri_template(16, 'file:output.txt').

% FACT: has_in_port(block_id, port_id).
has_in_port(1, 1).
has_in_port(2, 3).
has_in_port(3, 5).
has_in_port(3, 6).
has_in_port(3, 7).
has_in_port(4, 9).
has_in_port(4, 10).
has_in_port(4, 11).
has_in_port(4, 12).
has_in_port(4, 13).
has_in_port(4, 14).
has_in_port(4, 15).
has_in_port(5, 17).
has_in_port(6, 20).
has_in_port(6, 21).
has_in_port(6, 22).
has_in_port(6, 23).
has_in_port(6, 24).
has_in_port(6, 25).
has_in_port(6, 26).
has_in_port(7, 29).
has_in_port(7, 30).
has_in_port(7, 31).

% FACT: has_out_port(block_id, port_id).
has_out_port(1, 2).
has_out_port(2, 4).
has_out_port(3, 8).
has_out_port(4, 16).
has_out_port(5, 18).
has_out_port(5, 19).
has_out_port(6, 27).
has_out_port(6, 28).
has_out_port(7, 32).

% FACT: data(data_id, data_name, qualified_data_name).
data(1, 'Static_text', '[Static_text]').
data(2, 'Topicmodeling_Result', '[Topicmodeling_Result]').
data(3, 'Static_text', 'topic_modeling[Static_text]').
data(4, 'TextRead', 'topic_modeling[TextRead]').
data(5, 'stopwords', 'topic_modeling[stopwords]').
data(6, 'regular_expression', 'topic_modeling[regular_expression]').
data(7, 'FileProcess', 'topic_modeling[FileProcess]').
data(8, 'n_components', 'topic_modeling[n_components]').
data(9, 'n_top_words', 'topic_modeling[n_top_words]').
data(10, 'random_state', 'topic_modeling[random_state]').
data(11, 'max_iter', 'topic_modeling[max_iter]').
data(12, 'learning_method', 'topic_modeling[learning_method]').
data(13, 'learning_offset', 'topic_modeling[learning_offset]').
data(14, 'Topicmodeling_Result', 'topic_modeling[Topicmodeling_Result]').
data(15, 'file_valid', 'topic_modeling.LDA[file_valid]').
data(16, 'term_frequency', 'topic_modeling.LDA[term_frequency]').
data(17, 'term_frequency_vectorizer', 'topic_modeling.LDA[term_frequency_vectorizer]').
data(18, 'n_components', 'topic_modeling.LDA[n_components]').
data(19, 'max_iter', 'topic_modeling.LDA[max_iter]').
data(20, 'learning_method', 'topic_modeling.LDA[learning_method]').
data(21, 'learning_offset', 'topic_modeling.LDA[learning_offset]').
data(22, 'random_state', 'topic_modeling.LDA[random_state]').
data(23, 'LDA_model', 'topic_modeling.LDA[LDA_model]').
data(24, 'TermFrequency_feature_names', 'topic_modeling.LDA[TermFrequency_feature_names]').
data(25, 'n_top_words', 'topic_modeling.LDA[n_top_words]').
data(26, 'Topicmodeling_Result', 'topic_modeling.LDA[Topicmodeling_Result]').

% FACT: channel(channel_id, data_id).
channel(19, 2).
channel(20, 3).
channel(21, 4).
channel(22, 7).
channel(23, 1).
channel(24, 14).
channel(1, 14).
channel(2, 18).
channel(3, 16).
channel(4, 17).
channel(5, 19).
channel(6, 20).
channel(7, 21).
channel(8, 22).
channel(9, 23).
channel(10, 24).
channel(11, 25).
channel(12, 8).
channel(13, 9).
channel(14, 10).
channel(15, 11).
channel(16, 12).
channel(17, 13).
channel(18, 26).

% FACT: port_connects_to_channel(port_id, channel_id).
port_connects_to_channel(16, 19).
port_connects_to_channel(3, 20).
port_connects_to_channel(4, 21).
port_connects_to_channel(7, 21).
port_connects_to_channel(8, 22).
port_connects_to_channel(9, 22).
port_connects_to_channel(3, 23).
port_connects_to_channel(16, 24).
port_connects_to_channel(32, 1).
port_connects_to_channel(20, 2).
port_connects_to_channel(18, 3).
port_connects_to_channel(21, 3).
port_connects_to_channel(19, 4).
port_connects_to_channel(22, 4).
port_connects_to_channel(23, 5).
port_connects_to_channel(24, 6).
port_connects_to_channel(25, 7).
port_connects_to_channel(26, 8).
port_connects_to_channel(27, 9).
port_connects_to_channel(29, 9).
port_connects_to_channel(28, 10).
port_connects_to_channel(30, 10).
port_connects_to_channel(31, 11).
port_connects_to_channel(20, 12).
port_connects_to_channel(31, 13).
port_connects_to_channel(26, 14).
port_connects_to_channel(23, 15).
port_connects_to_channel(24, 16).
port_connects_to_channel(25, 17).
port_connects_to_channel(32, 18).

% FACT: inflow_connects_to_channel(port_id, channel_id).
inflow_connects_to_channel(1, 20).
inflow_connects_to_channel(1, 23).
inflow_connects_to_channel(10, 2).
inflow_connects_to_channel(13, 5).
inflow_connects_to_channel(14, 6).
inflow_connects_to_channel(15, 7).
inflow_connects_to_channel(12, 8).
inflow_connects_to_channel(11, 11).
inflow_connects_to_channel(10, 12).
inflow_connects_to_channel(11, 13).
inflow_connects_to_channel(12, 14).
inflow_connects_to_channel(13, 15).
inflow_connects_to_channel(14, 16).
inflow_connects_to_channel(15, 17).

% FACT: outflow_connects_to_channel(port_id, channel_id).
outflow_connects_to_channel(2, 19).
outflow_connects_to_channel(2, 24).
outflow_connects_to_channel(16, 1).
outflow_connects_to_channel(16, 18).

% FACT: uri_variable(uri_variable_id, variable_name, port_id).

% FACT: log_template(log_template_id, port_id, entry_template, log_annotation_id).

% FACT: log_template_variable(log_variable_id, variable_name, log_template_id).
