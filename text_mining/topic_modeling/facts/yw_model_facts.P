
% FACT: program(program_id, program_name, qualified_program_name, begin_annotation_id, end_annotation_id).
program(1, 'topic_modeling', 'topic_modeling', 1, 88).
program(2, 'ConstructCorpus', 'topic_modeling.ConstructCorpus', 14, 49).
program(3, 'AccessText', 'topic_modeling.ConstructCorpus.AccessText', 30, 38).
program(4, 'PreprocessFile', 'topic_modeling.ConstructCorpus.PreprocessFile', 39, 48).
program(5, 'Train_Predict_Model', 'topic_modeling.Train_Predict_Model', 50, 87).
program(6, 'get_iteration_number', 'topic_modeling.Train_Predict_Model.get_iteration_number', 65, 78).
program(7, 'LDA_model', 'topic_modeling.Train_Predict_Model.LDA_model', 79, 86).

% FACT: workflow(program_id).
workflow(1).
workflow(2).
workflow(5).

% FACT: function(program_id).

% FACT: has_subprogram(program_id, subprogram_id).
has_subprogram(1, 2).
has_subprogram(2, 3).
has_subprogram(2, 4).
has_subprogram(1, 5).
has_subprogram(5, 6).
has_subprogram(5, 7).

% FACT: port(port_id, port_type, port_name, qualified_port_name, port_annotation_id, data_id).
port(1, 'in', 'Static_text', 'topic_modeling<-Static_text', 3, 1).
port(2, 'param', 'num_topics', 'topic_modeling<-num_topics', 5, 2).
port(3, 'param', 'num_iteration', 'topic_modeling<-num_iteration', 6, 3).
port(4, 'out', 'LDA_model', 'topic_modeling->LDA_model', 7, 4).
port(5, 'out', 'log', 'topic_modeling->log', 10, 5).
port(6, 'in', 'text_data_path', 'topic_modeling.ConstructCorpus<-text_data_path', 16, 6).
port(7, 'in', 'stopwords', 'topic_modeling.ConstructCorpus<-stopwords', 20, 7).
port(8, 'in', 'regexr', 'topic_modeling.ConstructCorpus<-regexr', 21, 8).
port(9, 'out', 'dictionary', 'topic_modeling.ConstructCorpus->dictionary', 23, 9).
port(10, 'out', 'train_corpus', 'topic_modeling.ConstructCorpus->train_corpus', 26, 10).
port(11, 'out', 'test_corpus', 'topic_modeling.ConstructCorpus->test_corpus', 28, 11).
port(12, 'in', 'text_data_path', 'topic_modeling.ConstructCorpus.AccessText<-text_data_path', 32, 12).
port(13, 'out', 'text_file', 'topic_modeling.ConstructCorpus.AccessText->text_file', 36, 13).
port(14, 'in', 'stopwords', 'topic_modeling.ConstructCorpus.PreprocessFile<-stopwords', 41, 14).
port(15, 'in', 'regexr', 'topic_modeling.ConstructCorpus.PreprocessFile<-regexr', 42, 15).
port(16, 'in', 'TextRead', 'topic_modeling.ConstructCorpus.PreprocessFile<-TextRead', 44, 13).
port(17, 'out', 'dictionary', 'topic_modeling.ConstructCorpus.PreprocessFile->dictionary', 45, 16).
port(18, 'out', 'train_corpus', 'topic_modeling.ConstructCorpus.PreprocessFile->train_corpus', 46, 17).
port(19, 'out', 'test_corpus', 'topic_modeling.ConstructCorpus.PreprocessFile->test_corpus', 47, 18).
port(20, 'in', 'train_corpus', 'topic_modeling.Train_Predict_Model<-train_corpus', 52, 10).
port(21, 'in', 'dictionary', 'topic_modeling.Train_Predict_Model<-dictionary', 53, 9).
port(22, 'in', 'test_corpus', 'topic_modeling.Train_Predict_Model<-test_corpus', 54, 11).
port(23, 'param', 'num_iteration', 'topic_modeling.Train_Predict_Model<-num_iteration', 55, 19).
port(24, 'param', 'num_topics', 'topic_modeling.Train_Predict_Model<-num_topics', 57, 20).
port(25, 'out', 'LDA_model', 'topic_modeling.Train_Predict_Model->LDA_model', 59, 21).
port(26, 'out', 'log', 'topic_modeling.Train_Predict_Model->log', 62, 22).
port(27, 'in', 'train_corpus', 'topic_modeling.Train_Predict_Model.get_iteration_number<-train_corpus', 67, 23).
port(28, 'in', 'test_corpus', 'topic_modeling.Train_Predict_Model.get_iteration_number<-test_corpus', 68, 24).
port(29, 'in', 'dictionary', 'topic_modeling.Train_Predict_Model.get_iteration_number<-dictionary', 69, 25).
port(30, 'param', 'num_iteration', 'topic_modeling.Train_Predict_Model.get_iteration_number<-num_iteration', 70, 26).
port(31, 'param', 'num_topics', 'topic_modeling.Train_Predict_Model.get_iteration_number<-num_topics', 71, 27).
port(32, 'out', 'log', 'topic_modeling.Train_Predict_Model.get_iteration_number->log', 72, 28).
port(33, 'out', 'iter', 'topic_modeling.Train_Predict_Model.get_iteration_number->iter', 75, 29).
port(34, 'in', 'dictionary', 'topic_modeling.Train_Predict_Model.LDA_model<-dictionary', 80, 25).
port(35, 'in', 'num_topics', 'topic_modeling.Train_Predict_Model.LDA_model<-num_topics', 81, 27).
port(36, 'in', 'iter', 'topic_modeling.Train_Predict_Model.LDA_model<-iter', 82, 29).
port(37, 'out', 'LDA_model', 'topic_modeling.Train_Predict_Model.LDA_model->LDA_model', 84, 30).

% FACT: port_alias(port_id, alias).
port_alias(5, 'run_log').
port_alias(6, 'Static_text').
port_alias(8, 'regular_expression').
port_alias(9, 'dictionary').
port_alias(12, 'Static_text').
port_alias(13, 'TextRead').
port_alias(15, 'regular_expression').
port_alias(26, 'run_log').
port_alias(32, 'run_log').
port_alias(33, 'converge_iteration').
port_alias(36, 'converge_iteration').

% FACT: port_uri_template(port_id, uri).
port_uri_template(1, 'file:nipstxt.txt').
port_uri_template(4, 'file:LDA_model.txt').
port_uri_template(5, 'file:log.txt').
port_uri_template(6, 'file:nipstxt.txt').
port_uri_template(12, 'file:nipstxt.txt').
port_uri_template(25, 'file:LDA_model.txt').
port_uri_template(26, 'file:log.txt').
port_uri_template(32, 'file:log.txt').
port_uri_template(37, 'file:LDA_model.txt').

% FACT: has_in_port(block_id, port_id).
has_in_port(1, 1).
has_in_port(1, 2).
has_in_port(1, 3).
has_in_port(2, 6).
has_in_port(2, 7).
has_in_port(2, 8).
has_in_port(3, 12).
has_in_port(4, 14).
has_in_port(4, 15).
has_in_port(4, 16).
has_in_port(5, 20).
has_in_port(5, 21).
has_in_port(5, 22).
has_in_port(5, 23).
has_in_port(5, 24).
has_in_port(6, 27).
has_in_port(6, 28).
has_in_port(6, 29).
has_in_port(6, 30).
has_in_port(6, 31).
has_in_port(7, 34).
has_in_port(7, 35).
has_in_port(7, 36).

% FACT: has_out_port(block_id, port_id).
has_out_port(1, 4).
has_out_port(1, 5).
has_out_port(2, 9).
has_out_port(2, 10).
has_out_port(2, 11).
has_out_port(3, 13).
has_out_port(4, 17).
has_out_port(4, 18).
has_out_port(4, 19).
has_out_port(5, 25).
has_out_port(5, 26).
has_out_port(6, 32).
has_out_port(6, 33).
has_out_port(7, 37).

% FACT: data(data_id, data_name, qualified_data_name).
data(1, 'Static_text', '[Static_text]').
data(2, 'num_topics', '[num_topics]').
data(3, 'num_iteration', '[num_iteration]').
data(4, 'LDA_model', '[LDA_model]').
data(5, 'run_log', '[run_log]').
data(6, 'Static_text', 'topic_modeling[Static_text]').
data(7, 'stopwords', 'topic_modeling[stopwords]').
data(8, 'regular_expression', 'topic_modeling[regular_expression]').
data(9, 'dictionary', 'topic_modeling[dictionary]').
data(10, 'train_corpus', 'topic_modeling[train_corpus]').
data(11, 'test_corpus', 'topic_modeling[test_corpus]').
data(19, 'num_iteration', 'topic_modeling[num_iteration]').
data(20, 'num_topics', 'topic_modeling[num_topics]').
data(21, 'LDA_model', 'topic_modeling[LDA_model]').
data(22, 'run_log', 'topic_modeling[run_log]').
data(12, 'Static_text', 'topic_modeling.ConstructCorpus[Static_text]').
data(13, 'TextRead', 'topic_modeling.ConstructCorpus[TextRead]').
data(14, 'stopwords', 'topic_modeling.ConstructCorpus[stopwords]').
data(15, 'regular_expression', 'topic_modeling.ConstructCorpus[regular_expression]').
data(16, 'dictionary', 'topic_modeling.ConstructCorpus[dictionary]').
data(17, 'train_corpus', 'topic_modeling.ConstructCorpus[train_corpus]').
data(18, 'test_corpus', 'topic_modeling.ConstructCorpus[test_corpus]').
data(23, 'train_corpus', 'topic_modeling.Train_Predict_Model[train_corpus]').
data(24, 'test_corpus', 'topic_modeling.Train_Predict_Model[test_corpus]').
data(25, 'dictionary', 'topic_modeling.Train_Predict_Model[dictionary]').
data(26, 'num_iteration', 'topic_modeling.Train_Predict_Model[num_iteration]').
data(27, 'num_topics', 'topic_modeling.Train_Predict_Model[num_topics]').
data(28, 'run_log', 'topic_modeling.Train_Predict_Model[run_log]').
data(29, 'converge_iteration', 'topic_modeling.Train_Predict_Model[converge_iteration]').
data(30, 'LDA_model', 'topic_modeling.Train_Predict_Model[LDA_model]').

% FACT: channel(channel_id, data_id).
channel(33, 4).
channel(34, 5).
channel(35, 6).
channel(36, 10).
channel(37, 9).
channel(38, 11).
channel(39, 19).
channel(40, 20).
channel(41, 1).
channel(42, 2).
channel(43, 3).
channel(44, 21).
channel(45, 22).
channel(1, 9).
channel(2, 10).
channel(3, 11).
channel(4, 12).
channel(5, 14).
channel(6, 15).
channel(7, 13).
channel(8, 6).
channel(9, 7).
channel(10, 8).
channel(11, 16).
channel(12, 17).
channel(13, 18).
channel(14, 21).
channel(15, 22).
channel(16, 23).
channel(17, 24).
channel(18, 25).
channel(19, 25).
channel(20, 26).
channel(21, 27).
channel(22, 27).
channel(23, 29).
channel(24, 10).
channel(25, 9).
channel(26, 9).
channel(27, 11).
channel(28, 19).
channel(29, 20).
channel(30, 20).
channel(31, 30).
channel(32, 28).

% FACT: port_connects_to_channel(port_id, channel_id).
port_connects_to_channel(25, 33).
port_connects_to_channel(26, 34).
port_connects_to_channel(6, 35).
port_connects_to_channel(10, 36).
port_connects_to_channel(20, 36).
port_connects_to_channel(9, 37).
port_connects_to_channel(21, 37).
port_connects_to_channel(11, 38).
port_connects_to_channel(22, 38).
port_connects_to_channel(23, 39).
port_connects_to_channel(24, 40).
port_connects_to_channel(6, 41).
port_connects_to_channel(24, 42).
port_connects_to_channel(23, 43).
port_connects_to_channel(25, 44).
port_connects_to_channel(26, 45).
port_connects_to_channel(17, 1).
port_connects_to_channel(18, 2).
port_connects_to_channel(19, 3).
port_connects_to_channel(12, 4).
port_connects_to_channel(14, 5).
port_connects_to_channel(15, 6).
port_connects_to_channel(13, 7).
port_connects_to_channel(16, 7).
port_connects_to_channel(12, 8).
port_connects_to_channel(14, 9).
port_connects_to_channel(15, 10).
port_connects_to_channel(17, 11).
port_connects_to_channel(18, 12).
port_connects_to_channel(19, 13).
port_connects_to_channel(37, 14).
port_connects_to_channel(32, 15).
port_connects_to_channel(27, 16).
port_connects_to_channel(28, 17).
port_connects_to_channel(29, 18).
port_connects_to_channel(34, 19).
port_connects_to_channel(30, 20).
port_connects_to_channel(31, 21).
port_connects_to_channel(35, 22).
port_connects_to_channel(33, 23).
port_connects_to_channel(36, 23).
port_connects_to_channel(27, 24).
port_connects_to_channel(29, 25).
port_connects_to_channel(34, 26).
port_connects_to_channel(28, 27).
port_connects_to_channel(30, 28).
port_connects_to_channel(31, 29).
port_connects_to_channel(35, 30).
port_connects_to_channel(37, 31).
port_connects_to_channel(32, 32).

% FACT: inflow_connects_to_channel(port_id, channel_id).
inflow_connects_to_channel(1, 35).
inflow_connects_to_channel(3, 39).
inflow_connects_to_channel(2, 40).
inflow_connects_to_channel(1, 41).
inflow_connects_to_channel(2, 42).
inflow_connects_to_channel(3, 43).
inflow_connects_to_channel(6, 4).
inflow_connects_to_channel(7, 5).
inflow_connects_to_channel(8, 6).
inflow_connects_to_channel(6, 8).
inflow_connects_to_channel(7, 9).
inflow_connects_to_channel(8, 10).
inflow_connects_to_channel(20, 16).
inflow_connects_to_channel(22, 17).
inflow_connects_to_channel(21, 18).
inflow_connects_to_channel(21, 19).
inflow_connects_to_channel(23, 20).
inflow_connects_to_channel(24, 21).
inflow_connects_to_channel(24, 22).
inflow_connects_to_channel(20, 24).
inflow_connects_to_channel(21, 25).
inflow_connects_to_channel(21, 26).
inflow_connects_to_channel(22, 27).
inflow_connects_to_channel(23, 28).
inflow_connects_to_channel(24, 29).
inflow_connects_to_channel(24, 30).

% FACT: outflow_connects_to_channel(port_id, channel_id).
outflow_connects_to_channel(4, 33).
outflow_connects_to_channel(5, 34).
outflow_connects_to_channel(4, 44).
outflow_connects_to_channel(5, 45).
outflow_connects_to_channel(9, 1).
outflow_connects_to_channel(10, 2).
outflow_connects_to_channel(11, 3).
outflow_connects_to_channel(9, 11).
outflow_connects_to_channel(10, 12).
outflow_connects_to_channel(11, 13).
outflow_connects_to_channel(25, 14).
outflow_connects_to_channel(26, 15).
outflow_connects_to_channel(25, 31).
outflow_connects_to_channel(26, 32).

% FACT: uri_variable(uri_variable_id, variable_name, port_id).

% FACT: log_template(log_template_id, port_id, entry_template, log_annotation_id).

% FACT: log_template_variable(log_variable_id, variable_name, log_template_id).
