
% FACT: extract_source(source_id, source_path).
extract_source(1, 'LDA_topicmodeling.py').

% FACT: annotation(annotation_id, source_id, line_number, tag, keyword, value).
annotation(1, 1, 2, 'begin', '@begin', 'LDA').
annotation(2, 1, 3, 'in', '@in', 'file_valid').
annotation(3, 1, 3, 'desc', '@desc', 'file after pre_process procedure').
annotation(4, 1, 4, 'param', '@param', 'n_components').
annotation(5, 1, 5, 'param', '@param', 'n_top_words').
annotation(6, 1, 6, 'in', '@in', 'random_state').
annotation(7, 1, 7, 'in', '@in', 'max_iter').
annotation(8, 1, 8, 'in', '@in', 'learning_method').
annotation(9, 1, 9, 'in', '@in', 'learning_offset').
annotation(10, 1, 10, 'out', '@out', 'topic_log').
annotation(11, 1, 13, 'begin', '@begin', 'tf_calculation').
annotation(12, 1, 13, 'desc', '@desc', 'using CountVectorizer from sklearn library to calculate the term frequency').
annotation(13, 1, 14, 'in', '@in', 'file_valid').
annotation(14, 1, 14, 'desc', '@desc', 'file after pre_process').
annotation(15, 1, 15, 'out', '@out', 'tf').
annotation(16, 1, 15, 'as', '@as', 'term_frequency').
annotation(17, 1, 16, 'out', '@out', 'tf_vectorizer').
annotation(18, 1, 16, 'as', '@as', 'term_frequency_vectorizer').
annotation(19, 1, 25, 'end', '@end', 'tf_calculation').
annotation(20, 1, 27, 'begin', '@begin', 'LatentDirichletAllocation').
annotation(21, 1, 27, 'desc', '@desc', 'using the sciki-learn library to do LDA modeling').
annotation(22, 1, 28, 'param', '@param', 'n_components').
annotation(23, 1, 29, 'param', '@param', 'tf').
annotation(24, 1, 29, 'as', '@as', 'term_frequency').
annotation(25, 1, 30, 'param', '@param', 'tf_vectorizer').
annotation(26, 1, 30, 'as', '@as', 'term_frequency_vectorizer').
annotation(27, 1, 31, 'in', '@in', 'max_iter').
annotation(28, 1, 31, 'desc', '@desc', 'the maximum number of iterations').
annotation(29, 1, 32, 'in', '@in', 'learning_method').
annotation(30, 1, 32, 'desc', '@desc', 'method used to update _component, only used in fit method').
annotation(31, 1, 33, 'in', '@in', 'learning_offset').
annotation(32, 1, 33, 'desc', '@desc', 'a parameter that down weights early iterations in online learning').
annotation(33, 1, 34, 'in', '@in', 'random_state').
annotation(34, 1, 34, 'desc', '@desc', 'random number generator').
annotation(35, 1, 35, 'out', '@out', 'lda').
annotation(36, 1, 35, 'as', '@as', 'LDA_model').
annotation(37, 1, 36, 'out', '@out', 'tf_feature_names').
annotation(38, 1, 36, 'as', '@as', 'TermFrequency_feature_names').
annotation(39, 1, 46, 'end', '@end', 'LatentDirichletAllocation').
annotation(40, 1, 48, 'begin', '@begin', 'print_top_words').
annotation(41, 1, 48, 'desc', '@desc', 'print the topics with top words').
annotation(42, 1, 49, 'in', '@in', 'lda').
annotation(43, 1, 49, 'as', '@as', 'LDA_model').
annotation(44, 1, 49, 'desc', '@desc', 'LDA model').
annotation(45, 1, 50, 'in', '@in', 'tf_feature_names').
annotation(46, 1, 50, 'as', '@as', 'TermFrequency_feature_names').
annotation(47, 1, 51, 'param', '@param', 'n_top_words').
annotation(48, 1, 52, 'out', '@out', 'topic_log').
annotation(49, 1, 60, 'end', '@end', 'print_top_words').
annotation(50, 1, 62, 'end', '@end', 'LDA').

% FACT: annotation_qualifies(qualifying_annotation_id, primary_annotation_id).
annotation_qualifies(3, 2).
annotation_qualifies(12, 11).
annotation_qualifies(14, 13).
annotation_qualifies(16, 15).
annotation_qualifies(18, 17).
annotation_qualifies(21, 20).
annotation_qualifies(24, 23).
annotation_qualifies(26, 25).
annotation_qualifies(28, 27).
annotation_qualifies(30, 29).
annotation_qualifies(32, 31).
annotation_qualifies(34, 33).
annotation_qualifies(36, 35).
annotation_qualifies(38, 37).
annotation_qualifies(41, 40).
annotation_qualifies(43, 42).
annotation_qualifies(44, 42).
annotation_qualifies(46, 45).
